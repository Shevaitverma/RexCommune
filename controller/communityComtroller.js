const asyncHandler = require("express-async-handler");
const { Generator } = require('snowflake-generator');
const Community = require("../models/communityModel");
const Auth = require("../models/authModel");

//construct a new snowflake Generator
const SnowflakeGenerator = new Generator(1420070400000);

// create community
const createCommunity = asyncHandler(async(req, res)=>{
    const {name} = req.body;
    
    // slug is autogenerated from the name
    const slug = name.toLowerCase();

    // fetching owner from logged in user.
    const auth = await Auth.findById(req.auth._id);
    if(!auth){
        res.status(400);
        throw new Error("owner not found..");
    }
    const {id} = auth;
    const owner =  id;


    // validate
    if(!name || !slug || !owner){
        res.status(400)
        throw new Error("please fill  in all required fields")
    }

    // check if comminuty exist
    const communityExist = await Community.findOne({name})
    if(communityExist){
        res.status(400)
        throw new Error("Community is already exists..")
    }

    // generate a snowflake
    const Snowflake = SnowflakeGenerator.generate();

    // create new community
    const community = await Community.create({
        id: Snowflake,
        name,
        slug,
        owner
    });

    if(community){
        const {id, name, slug, owner, createdAt, updatedAt} = community;

        res.status(201).json({
            status:true,
            content:{
                data:{
                    id,
                    name,
                    slug,
                    owner,
                    createdAt, 
                    updatedAt
                },
            }
        })
    }
    
})

// get all community

// get all members 

// get my Owned community

// get my joined community

module.exports = {
    createCommunity
}